<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>叹为观止</title>
  <subtitle>追求卓越，成功自然来</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.vichamp.com/"/>
  <updated>2017-04-20T06:23:29.764Z</updated>
  <id>http://blog.vichamp.com/</id>
  
  <author>
    <name>John Doe</name>
    <email>victorwoo@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PowerShell 技能连载 - 确认重复的 CSV 表头（第二部分）</title>
    <link href="http://blog.vichamp.com/2017/04/19/identifying-duplicate-csv-headers-part-2/"/>
    <id>http://blog.vichamp.com/2017/04/19/identifying-duplicate-csv-headers-part-2/</id>
    <published>2017-04-18T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.764Z</updated>
    
    <content type="html"><![CDATA[<p>当一个 CSV 文件包含重复的表头时，它无法被导入。在前一个技能中我们掩饰了如何检测一个 CSV 文件中重复的表头。以下是一个自动更正重复项的实践。</p>
<p>第一步，您需要一个包含重复表头的 CSV 文件。例如在德文系统中，您可以这样创建一个文件：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; driverquery /V /FO CSV | <span class="built_in">Set-Content</span> -Path <span class="variable">$env:temp</span>\test.csv -Encoding UTF8</div></pre></td></tr></table></figure>
<p>快速打开该文件并检查它是否确实包含重复项。</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; notepad <span class="variable">$env:temp</span>\test.csv</div></pre></td></tr></table></figure>
<p>如果没有重复项，请将某些表头重命名以制造一些重复项，并保存文件。</p>
<p>您现在可以用 <code>Import-Csv</code> 导入 CSV 文件了：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt;  <span class="built_in">Import-Csv</span> -Path <span class="variable">$env:temp</span>\test.csv -Delimiter <span class="string">','</span></div><div class="line"><span class="built_in">Import-Csv</span> : Element  <span class="string">"Status"</span> is present already.</div><div class="line"><span class="keyword">In</span> Zeile:<span class="number">1</span> Zeichen:<span class="number">1</span></div><div class="line">+ <span class="built_in">Import-Csv</span> -Path <span class="variable">$env:temp</span>\test.csv  -Delimiter <span class="string">','</span></div><div class="line">+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</div><div class="line">    +  CategoryInfo          : NotSpecified: (:)  [Import-Csv], ExtendedTypeSystemException</div><div class="line">    +  FullyQualifiedErrorId :  AlreadyPresentPSMemberInfoInternalCollectionAdd,Microsoft.PowerShell.Commands.ImportCsvCommand</div></pre></td></tr></table></figure>
<p>这是一个新的名为 <code>Import-CsvWithoutDuplicate</code> 的函数，可以自动处理重复的项：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Import-CsvWithDuplicate(<span class="variable">$Path</span>, <span class="variable">$Delimiter</span>=<span class="string">','</span>, <span class="variable">$Encoding</span>=<span class="string">'UTF8'</span>)</div><div class="line">&#123;</div><div class="line">    <span class="comment"># get the header line and all header items</span></div><div class="line">    <span class="variable">$headerLine</span> = <span class="built_in">Get-Content</span> <span class="variable">$Path</span> | <span class="built_in">Select-Object</span> -First <span class="number">1</span></div><div class="line">    <span class="variable">$headers</span> = <span class="variable">$headerLine</span>.Split(<span class="variable">$Delimiter</span>)</div><div class="line"></div><div class="line">    <span class="comment"># check for duplicate header names, and if found, add an incremented</span></div><div class="line">    <span class="comment"># number to it</span></div><div class="line">    <span class="variable">$dupDict</span> = @&#123;&#125;</div><div class="line">    <span class="variable">$newHeaders</span> = @(<span class="keyword">foreach</span>(<span class="variable">$header</span> <span class="keyword">in</span> <span class="variable">$headers</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="variable">$incrementor</span> = <span class="number">1</span></div><div class="line">        <span class="variable">$header</span> = <span class="variable">$header</span>.Trim(<span class="string">'"'</span>)</div><div class="line">        <span class="variable">$newheader</span> = <span class="variable">$header</span></div><div class="line"></div><div class="line">        <span class="comment"># increment numbers until the new name is unique</span></div><div class="line">        <span class="keyword">while</span> (<span class="variable">$dupDict</span>.ContainsKey(<span class="variable">$newheader</span>) <span class="nomarkup">-eq</span> <span class="literal">$true</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="variable">$newheader</span> = <span class="string">"<span class="variable">$header</span><span class="variable">$incrementor</span>"</span></div><div class="line">            <span class="variable">$incrementor</span>++</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="variable">$dupDict</span>.Add(<span class="variable">$newheader</span>, <span class="variable">$header</span>)</div><div class="line"></div><div class="line">        <span class="comment"># return the new header, producing a string array</span></div><div class="line">        <span class="variable">$newheader</span></div><div class="line">    &#125;)</div><div class="line"></div><div class="line">    <span class="comment"># read the CSV without its own headers..</span></div><div class="line">    <span class="built_in">Get-Content</span> -Path <span class="variable">$Path</span> -Encoding <span class="variable">$Encoding</span> |</div><div class="line">        <span class="built_in">Select-Object</span> -Skip <span class="number">1</span> |</div><div class="line">        <span class="comment"># ..and replace headers with newly created list</span></div><div class="line">        <span class="built_in">ConvertFrom-CSV</span> -Delimiter <span class="variable">$Delimiter</span> -Header <span class="variable">$newHeaders</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>通过它，您可以安全地导入 CSV 文件，不会遇到重复的表头：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; Import-CsvWithDuplicate -Path <span class="variable">$env:temp</span>\test.csv -Delimiter <span class="string">','</span></div><div class="line"></div><div class="line"></div><div class="line">Modulname                  : <span class="number">1394</span>ohci</div><div class="line">Anzeigename                : OHCI-konformer <span class="number">1394</span>-Hostcontroller</div><div class="line">Beschreibung               : OHCI-konformer <span class="number">1394</span>-Hostcontroller</div><div class="line">Treibertyp                 : Kernel</div><div class="line">Startmodus                 : Manual</div><div class="line">Status                     : Stopped</div><div class="line">Status1                    : OK</div><div class="line">Beenden annehmen           : FALSE</div><div class="line">Anhalten annehmen          : FALSE</div><div class="line">Ausgelagerter Pool (Bytes) : <span class="number">4.096</span></div><div class="line">Code(Bytes)                : <span class="number">204.800</span></div><div class="line">BSS(Bytes)                 : <span class="number">0</span></div><div class="line">Linkdatum                  : <span class="number">16.07</span>.<span class="number">2016</span> <span class="number">04</span>:<span class="number">21</span>:<span class="number">36</span></div><div class="line">Pfad                       : C:\WINDOWS\system32\drivers\<span class="number">1394</span>ohci.sys</div><div class="line">Init(Bytes)                : <span class="number">4.096</span></div><div class="line"></div><div class="line">Modulname                  : <span class="number">3</span>ware</div><div class="line">Anzeigename                : <span class="number">3</span>ware</div><div class="line">Beschreibung               : <span class="number">3</span>ware</div><div class="line">Treibertyp                 : Kernel</div><div class="line">Startmodus                 : Manual</div><div class="line">Status                     : Stopped</div><div class="line">Status1                    : OK</div><div class="line">Beenden annehmen           : FALSE</div><div class="line">Anhalten annehmen          : FALSE</div><div class="line">Ausgelagerter Pool (Bytes) : <span class="number">0</span></div><div class="line">(...)</div></pre></td></tr></table></figure>
<p>如您所见，这个函数自动将第二个 “Status” 实例重命名为 “Status1”。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/identifying-duplicate-csv-headers-part-2" target="_blank" rel="external">Identifying Duplicate CSV Headers (Part 2)</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Identifying Duplicate CSV Headers (Part 2)
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 确认重复的 CSV 表头（第一部分）</title>
    <link href="http://blog.vichamp.com/2017/04/18/identifying-duplicate-csv-headers-part-1/"/>
    <id>http://blog.vichamp.com/2017/04/18/identifying-duplicate-csv-headers-part-1/</id>
    <published>2017-04-17T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.761Z</updated>
    
    <content type="html"><![CDATA[<p>CSV 文件只是文本文件，所以可以很容易地提取它的第一行并检查它的表头。如果您手头没有一个 CSV 文件，这行代码可以快速帮您创建一个：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; <span class="built_in">Get-Process</span> | <span class="built_in">Export-Csv</span> -Path <span class="variable">$env:temp</span>\test.csv -NoTypeInformation -Encoding UTF8 -UseCulture</div><div class="line"></div><div class="line">PS C:\&gt;</div></pre></td></tr></table></figure>
<p>现在您可以分析它的表头。这个简单的方法告诉您 CSV 文件中是否有重复的标题（在这个例子中显然不存在）。这段代码假设您的 CSV 文件分隔符是逗号。如果使用一个不同的分隔符，请调整用于分割的字符：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$headers</span> = <span class="built_in">Get-Content</span> <span class="variable">$env:temp</span>\test.csv | <span class="built_in">Select-Object</span> -First <span class="number">1</span></div><div class="line"><span class="variable">$duplicates</span> = <span class="variable">$headers</span>.Split(<span class="string">','</span>) | <span class="built_in">Group-Object</span> -NoElement | <span class="built_in">Where-Object</span> &#123;<span class="variable">$_</span>.Count <span class="nomarkup">-ge</span> <span class="number">2</span>&#125;</div><div class="line"><span class="keyword">if</span> (<span class="variable">$duplicates</span>.Count <span class="nomarkup">-eq</span> <span class="number">0</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">Write-Host</span> <span class="string">'You are safe!'</span></div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">Write-Warning</span> <span class="string">'There are duplicate columns in your CSV file:'</span></div><div class="line">    <span class="variable">$duplicates</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果如预想的：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">You are safe!</div><div class="line"></div><div class="line">PS C:\&gt;</div></pre></td></tr></table></figure>
<p>如果您好奇当遇到重复的标题时会如何失败，请试试这段代码：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; driverquery /V /FO CSV | <span class="built_in">Set-Content</span> -Path <span class="variable">$env:temp</span>\test.csv -Encoding UTF8</div></pre></td></tr></table></figure>
<p>如果您在一个的文系统中运行这段代码，结果将会类似这样：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">WARNUNG: There are  duplicate columns <span class="keyword">in</span> your CSV file:</div><div class="line"></div><div class="line">Count Name</div><div class="line">----- ----</div><div class="line">    <span class="number">2</span>  <span class="string">"Status"</span></div></pre></td></tr></table></figure>
<p>显然，在本地化时，Microsoft 将 “State” 和 “Status” 两个单词都翻译成了德文的 “Status”，造成了重复的列标题。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/identifying-duplicate-csv-headers-part-1" target="_blank" rel="external">Identifying Duplicate CSV Headers (Part 1)</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Identifying Duplicate CSV Headers (Part 1)
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 用区域性固定的方式序列化日期和时间</title>
    <link href="http://blog.vichamp.com/2017/04/17/serializing-date-and-time-in-a-culture-invariant-way/"/>
    <id>http://blog.vichamp.com/2017/04/17/serializing-date-and-time-in-a-culture-invariant-way/</id>
    <published>2017-04-16T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.756Z</updated>
    
    <content type="html"><![CDATA[<p>当您保存日期和时间到文本中时，例如导出到 CSV 时，或创建文本报告时，<code>DateTime</code> 对象将会按照您的区域设置转换为相应的日期和时间格式：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">PS&gt; <span class="variable">$date</span> = <span class="built_in">Get-Date</span> -Date <span class="string">'2017-02-03 19:22:11'</span></div><div class="line"></div><div class="line">PS&gt; <span class="string">"<span class="variable">$date</span>"</span></div><div class="line"><span class="number">02</span>/<span class="number">03</span>/<span class="number">2017</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div><div class="line"></div><div class="line">PS&gt; <span class="variable">$date</span>.ToString()</div><div class="line"><span class="number">03.02</span>.<span class="number">2017</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div><div class="line"></div><div class="line">PS&gt; <span class="built_in">Get-Date</span> -Date <span class="variable">$date</span> -DisplayHint DateTime</div><div class="line"></div><div class="line">Freitag, <span class="number">3</span>. Februar <span class="number">2017</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div></pre></td></tr></table></figure>
<p>这些都是和区域有关的格式，所以当其他人打开您的数据，将它转换为真实的日期时间可能会失败。这就是为什么推荐将日期时间信息保存为文本时将它转换为区域无关的 ISO 格式：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PS&gt; <span class="built_in">Get-Date</span> -Date <span class="variable">$date</span> -Format <span class="string">'yyyy-MM-dd HH:mm:ss'</span></div><div class="line"><span class="number">2017</span>-<span class="number">02</span>-<span class="number">03</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div><div class="line"></div><div class="line">PS&gt;</div></pre></td></tr></table></figure>
<p>该 ISO 格式重视能正确地转回 <code>DateTime</code> 对象，无论您的机器用的是什么语言：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">PS&gt; [DateTime]<span class="string">'2017-02-03 19:22:11'</span></div><div class="line"></div><div class="line">Friday, February <span class="number">3</span>, <span class="number">2017</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div></pre></td></tr></table></figure>
<p>另外，这种设计保证它们在使用字母排序时顺序是正确的。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/serializing-date-and-time-in-a-culture-invariant-way" target="_blank" rel="external">Serializing Date and Time in a Culture-Invariant Way</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Serializing Date and Time in a Culture-Invariant Way
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 将时钟周期转换为日期和时间（第二部分）</title>
    <link href="http://blog.vichamp.com/2017/04/14/converting-ticks-to-date-and-time-part-2/"/>
    <id>http://blog.vichamp.com/2017/04/14/converting-ticks-to-date-and-time-part-2/</id>
    <published>2017-04-13T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.752Z</updated>
    
    <content type="html"><![CDATA[<p>在前一个技能中我们解释了如何将用时钟周期数表达的日期时间转换为真实的 <code>DateTime</code> 格式。然而，现实中有两种不同的时钟周期格式，以下是如何转换数字型日期时间信息的概述：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">PS&gt; <span class="variable">$date</span> = <span class="built_in">Get-Date</span> -Date <span class="string">'2017-02-03 19:22:11'</span></div><div class="line">PS&gt; <span class="variable">$ticks</span> = <span class="variable">$date</span>.Ticks</div><div class="line">PS&gt; <span class="variable">$ticks</span></div><div class="line"><span class="number">636217465310000000</span></div><div class="line"></div><div class="line">PS&gt; [DateTime]<span class="variable">$ticks</span></div><div class="line">Friday, February <span class="number">3</span>, <span class="number">2017</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div><div class="line"></div><div class="line">PS&gt; [DateTime]::FromBinary(<span class="variable">$ticks</span>)</div><div class="line">Friday, February <span class="number">3</span>, <span class="number">2017</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div><div class="line"></div><div class="line">PS&gt; [DateTime]::FromFileTime(<span class="variable">$ticks</span>)</div><div class="line">Friday, February <span class="number">3</span>, <span class="number">3617</span> <span class="number">20</span>:<span class="number">22</span>:<span class="number">11</span></div><div class="line"></div><div class="line">PS&gt; [DateTime]::FromFileTimeUtc(<span class="variable">$ticks</span>)</div><div class="line">Friday, February <span class="number">3</span>, <span class="number">3617</span> <span class="number">19</span>:<span class="number">22</span>:<span class="number">11</span></div></pre></td></tr></table></figure>
<p>如您所见，将时钟周期转换为 <code>DateTime</code> 和执行 <code>FromBinary()</code> 静态方法的效果是一样的。但是 <code>FromeFileTime()</code> 做了什么？它似乎把你发送到了遥远的将来。</p>
<p>这个例子显示了到底发生了什么：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">PS&gt; <span class="variable">$date1</span> = [DateTime]::FromBinary(<span class="variable">$ticks</span>)</div><div class="line">PS&gt; <span class="variable">$date2</span> = [DateTime]::FromFileTime(<span class="variable">$ticks</span>)</div><div class="line">PS&gt; <span class="variable">$date2</span> - <span class="variable">$date1</span></div><div class="line"></div><div class="line">Days              : <span class="number">584388</span></div><div class="line">Hours             : <span class="number">1</span></div><div class="line">Minutes           : <span class="number">0</span></div><div class="line">Seconds           : <span class="number">0</span></div><div class="line">Milliseconds      : <span class="number">0</span></div><div class="line">Ticks             : <span class="number">504911268000000000</span></div><div class="line">TotalDays         : <span class="number">584388</span>,<span class="number">041666667</span></div><div class="line">TotalHours        : <span class="number">14025313</span></div><div class="line">TotalMinutes      : <span class="number">841518780</span></div><div class="line">TotalSeconds      : <span class="number">50491126800</span></div><div class="line">TotalMilliseconds : <span class="number">50491126800000</span></div><div class="line"></div><div class="line">PS&gt; (<span class="variable">$date2</span> - <span class="variable">$date1</span>).Days / <span class="number">365.25</span></div><div class="line"><span class="number">1599</span>,<span class="number">96714579055</span></div></pre></td></tr></table></figure>
<p><code>FromeFileTime()</code> 只是增加了 1601 年（因为闰年，实际计算结果略有出入）。Windows 的某些部分（例如 Active Directory）从 1601 年 1 月 1 日开始计算日期。对于这些情况，请使用 <code>FromeFileTime()</code> 来获取正确的日期时间。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/converting-ticks-to-date-and-time-part-2" target="_blank" rel="external">Converting Ticks to Date and Time (Part 2)</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Converting Ticks to Date and Time (Part 2)
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 将时钟周期转换为日期和时间（第一部分）</title>
    <link href="http://blog.vichamp.com/2017/04/13/converting-ticks-to-date-and-time-part-1/"/>
    <id>http://blog.vichamp.com/2017/04/13/converting-ticks-to-date-and-time-part-1/</id>
    <published>2017-04-12T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.748Z</updated>
    
    <content type="html"><![CDATA[<p>有时候您可能会遇到一些奇怪的日期和时间格式，它们可能用的是类似这样的 64 位 integer 数值：636264671350358729。</p>
<p>如果您想将这样的“时钟周期”（Windows 中最小的时间片），只需要将数字转换为 <code>DateTime</code> 类型：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">PS&gt; [DateTime]<span class="number">636264671350358729</span></div><div class="line"></div><div class="line">Thursday, March <span class="number">30</span>, <span class="number">2017</span> <span class="number">10</span>:<span class="number">38</span>:<span class="number">55</span></div></pre></td></tr></table></figure>
<p>类似地，要将一个日期转换为时钟周期，请试试这段代码：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PS&gt; <span class="variable">$date</span> = <span class="built_in">Get-Date</span> -Date <span class="string">'2017-02-03 19:22:11'</span></div><div class="line"></div><div class="line">PS&gt; <span class="variable">$date</span>.Ticks</div><div class="line"><span class="number">636217465310000000</span></div></pre></td></tr></table></figure>
<p>比如说，您可以利用这个时钟周期来将日期和时间序列化成非特定区域的格式。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/converting-ticks-to-date-and-time-part-1" target="_blank" rel="external">Converting Ticks to Date and Time (Part 1)</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Converting Ticks to Date and Time (Part 1)
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 直接导入证书（第二部分）</title>
    <link href="http://blog.vichamp.com/2017/04/12/directly-importing-certificates-part-2/"/>
    <id>http://blog.vichamp.com/2017/04/12/directly-importing-certificates-part-2/</id>
    <published>2017-04-11T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.744Z</updated>
    
    <content type="html"><![CDATA[<p>在前一个技能中我们演示了如何在任何版本的 PowerShell 中用 .NET 方法导入数字证书。新版本的 PowerShell 有一个 “PKI” module，其中包括了 <code>Import-Certificate</code> cmdlet，导入证书变得更简单了。</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#requires -Version 2.0 -Modules PKI </span></div><div class="line"><span class="comment"># importing to personal store</span></div><div class="line"><span class="variable">$Path</span> = <span class="string">'C:\Path\To\CertFile.cer'</span></div><div class="line">Import-Certificate -FilePath <span class="variable">$Path</span> -CertStoreLocation Cert:\CurrentUser\My</div></pre></td></tr></table></figure>
<p>请注意 <code>Import-Certificate</code> 如何通过 <code>-CertStoreLocation</code> 指定目标存储位置。这个命令返回导入的证书。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/directly-importing-certificates-part-2" target="_blank" rel="external">Directly Importing Certificates (Part 2)</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Directly Importing Certificates (Part 2)
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 直接导入证书（第一部分）</title>
    <link href="http://blog.vichamp.com/2017/04/11/directly-importing-certificates-part-1/"/>
    <id>http://blog.vichamp.com/2017/04/11/directly-importing-certificates-part-1/</id>
    <published>2017-04-10T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.742Z</updated>
    
    <content type="html"><![CDATA[<p>可以在任意版本的 PowerShell 中用 .NET 方法将证书安装到计算机中。这将导入一个证书文件到个人存储中：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># importing to personal store</span></div><div class="line"><span class="variable">$Path</span> = <span class="string">'C:\Path\To\CertFile.cer'</span></div><div class="line"><span class="variable">$Store</span> = <span class="built_in">New-Object</span> -TypeName System.Security.Cryptography.X509Certificates.X509Store -ArgumentList My, CurrentUser</div><div class="line"><span class="variable">$Store</span>.Open(<span class="string">'ReadWrite'</span>)</div><div class="line"><span class="variable">$Store</span>.Add(<span class="variable">$Path</span>)</div><div class="line"><span class="variable">$Store</span>.Close()</div></pre></td></tr></table></figure>
<p>您可以打开证书管理器证实这一点：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; certmgr.msc</div></pre></td></tr></table></figure>
<p>如果您想将证书导入到一个不同的存储位置，只需要调整创建存储对象的参数即可。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/directly-importing-certificates-part-1" target="_blank" rel="external">Directly Importing Certificates (Part 1)</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Directly Importing Certificates (Part 1)
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 请注意别名</title>
    <link href="http://blog.vichamp.com/2017/04/10/beware-of-aliases/"/>
    <id>http://blog.vichamp.com/2017/04/10/beware-of-aliases/</id>
    <published>2017-04-09T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.738Z</updated>
    
    <content type="html"><![CDATA[<p>您能指出这段代码的错误吗？</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; <span class="keyword">function</span> r &#123; <span class="string">"This never runs"</span> &#125;</div><div class="line"></div><div class="line">PS C:\&gt; r</div><div class="line"><span class="keyword">function</span> r &#123; <span class="string">"This never runs"</span> &#125;</div><div class="line"></div><div class="line">PS C:\&gt;</div></pre></td></tr></table></figure>
<p>如果您执行函数 “r”，它只会返回函数的源代码。</p>
<p>错误的原因是函数名 “r” 和内置的别名冲突：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; <span class="built_in">Get-Alias</span> r</div><div class="line"></div><div class="line">CommandType     Name                                               Version    Source</div><div class="line">-----------     ----                                               -------    ------</div><div class="line">Alias           r -&gt; <span class="built_in">Invoke-History</span></div><div class="line"></div><div class="line"></div><div class="line">PS C:\&gt;</div></pre></td></tr></table></figure>
<p>所以请始终确保知道内置的别名——它们的优先级永远比函数或其它命令高。更好的做法是，按照最佳实践，始终用 Verb-Noum 的方式来命名您的函数。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/beware-of-aliases" target="_blank" rel="external">Beware of Aliases</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Beware of Aliases
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 处理长文件路径</title>
    <link href="http://blog.vichamp.com/2017/04/07/dealing-with-long-file-paths/"/>
    <id>http://blog.vichamp.com/2017/04/07/dealing-with-long-file-paths/</id>
    <published>2017-04-06T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.735Z</updated>
    
    <content type="html"><![CDATA[<p>以前，当路径长于 256 字符时，Windows 文件系统有时会变得缓慢。在 PowerShell Gallery 有一个 module，增加了一系列 cmdlet，可以快速搜索文件系统，并且支持任意长度的路径。</p>
<p>如果您使用 PowerShell 5 或安装了 PowerShellGet(<a href="http://www.powershellgallery.com" target="_blank" rel="external">www.powershellgallery.com</a>)，那么您可以从 PowerShell Gallery 中下载和安装 “PSAlphaFS” module：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Install-Module -Name PSAlphaFS -Scope CurrentUser</div></pre></td></tr></table></figure>
<p>不幸的是，这些 cmdlet 似乎需要完整的管理员特权，而对普通用户会抛出异常。如果您是管理员，您可以以这种方式查找长路径的文件：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get-LongChildItem -Path c:\windows -Recurse -File |</div><div class="line">    <span class="built_in">Where-Object</span> &#123; <span class="variable">$_</span>.FullName.Length <span class="nomarkup">-gt</span> <span class="number">250</span> &#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/dealing-with-long-file-paths" target="_blank" rel="external">Dealing with Long File Paths</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Dealing with Long File Paths
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 检测字符代码 0</title>
    <link href="http://blog.vichamp.com/2017/04/06/detecting-character-code-0/"/>
    <id>http://blog.vichamp.com/2017/04/06/detecting-character-code-0/</id>
    <published>2017-04-05T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.730Z</updated>
    
    <content type="html"><![CDATA[<p>有些时候，字符串适用 “<code>\0</code>“ 作为分隔符。不像其它大多数分隔符，这个分隔符并不显示在文本输出中，但仍然可以用于分割文本。</p>
<p>PowerShell 可以处理包含字符代码 0 的字符串。它用反斜杠后跟着数字 0 来表示。请注意文本需要放在双引号之内，才能将反斜杠序列转换为字节 0。</p>
<p>以下是一个演示如何分割 <code>\0</code> 分割的文本的例子：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># create a sample text</span></div><div class="line"><span class="variable">$text</span> = <span class="string">"Part 1`0Part 2`0Part 3"</span></div><div class="line"><span class="comment"># delimiter does not show in output...</span></div><div class="line"><span class="variable">$text</span> </div><div class="line"><span class="comment"># ...but can be used to split:</span></div><div class="line"><span class="variable">$text</span> -split <span class="string">"`0"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/detecting-character-code-0" target="_blank" rel="external">Detecting Character Code 0</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Detecting Character Code 0
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 自动定义函数的别名</title>
    <link href="http://blog.vichamp.com/2017/04/05/auto-declaring-alias-names-for-functions/"/>
    <id>http://blog.vichamp.com/2017/04/05/auto-declaring-alias-names-for-functions/</id>
    <published>2017-04-04T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.728Z</updated>
    
    <content type="html"><![CDATA[<p>您也许知道 PowerShell 支持命令的别名。但是您是否知道也可以在函数定义内部为 PowerShell 函数定义别名（PowerShell 4 引入的功能）呢？让我们来看看：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Get-AlcoholicBeverage</div><div class="line">&#123;</div><div class="line">    [Alias(<span class="string">'Beer'</span>,<span class="string">'Drink'</span>)]</div><div class="line">    [CmdletBinding()]</div><div class="line">    <span class="keyword">param</span>()</div><div class="line"></div><div class="line">    <span class="string">"Here is your beer."</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个函数的“正式”名称是 <code>Get-AlcoholicBeverage</code>，但是这个函数也可以通过 “<code>Beer</code>“ 和 “<code>Drink</code>“ 别名来引用。在函数定义时，PowerShell 自动增加了这些别名：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">CommandType     Name</div><div class="line">-----------     ----</div><div class="line">Alias           Beer -&gt; Get-AlcoholicBeverage</div><div class="line">Alias           Drink -&gt; Get-AlcoholicBeverage</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/auto-declaring-alias-names-for-functions" target="_blank" rel="external">Auto-Declaring Alias Names for Functions</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Auto-Declaring Alias Names for Functions
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 检查操作系统版本</title>
    <link href="http://blog.vichamp.com/2017/04/04/checking-operating-system-version/"/>
    <id>http://blog.vichamp.com/2017/04/04/checking-operating-system-version/</id>
    <published>2017-04-03T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.723Z</updated>
    
    <content type="html"><![CDATA[<p>以下是一个简单快速的检查操作系统版本的方法：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; [Environment]::OSVersion</div><div class="line"></div><div class="line"></div><div class="line">Platform ServicePack Version      VersionString                    </div><div class="line">-------- ----------- -------      -------------                    </div><div class="line">    Win32NT             <span class="number">10.0</span>.<span class="number">14393.0</span> Microsoft Windows NT <span class="number">10.0</span>.<span class="number">14393.0</span></div></pre></td></tr></table></figure>
<p>所以要检查一个脚本是否运行在一个预定的操作系统上变得十分简单。例如要检查是否运行在 Windows 10 上，请试试这行代码：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; [Environment]::OSVersion.Version.Major <span class="nomarkup">-eq</span> <span class="number">10</span></div><div class="line"></div><div class="line">True</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/checking-operating-system-version" target="_blank" rel="external">Checking Operating System Version</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Checking Operating System Version
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 检查变量是否为 $NULL</title>
    <link href="http://blog.vichamp.com/2017/04/03/comparing-against-null/"/>
    <id>http://blog.vichamp.com/2017/04/03/comparing-against-null/</id>
    <published>2017-04-02T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.719Z</updated>
    
    <content type="html"><![CDATA[<p>如果您想检查一个变量是否为 <code>$Null</code>（空），请记住始终将 <code>$null</code> 放在比较运算符的左边。大多数情况下，顺序不重要：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; <span class="variable">$a</span> = <span class="literal">$null</span></div><div class="line"></div><div class="line">PS C:\&gt; <span class="variable">$b</span> = <span class="number">12</span></div><div class="line"></div><div class="line">PS C:\&gt; <span class="variable">$a</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span></div><div class="line">True</div><div class="line"></div><div class="line">PS C:\&gt; <span class="variable">$b</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span></div><div class="line">False</div></pre></td></tr></table></figure>
<p>然而，如果一个变量为一个数组，则将数组放在对比操作符左边的行为类似过滤器。这时候顺序变得很关键：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># this all produces inconsistent and fishy results</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="literal">$null</span></div><div class="line"><span class="variable">$a</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span>  <span class="comment"># works: returns $true</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></div><div class="line"><span class="variable">$a</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span>  <span class="comment"># fails: returns $null</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="literal">$null</span>,<span class="number">3</span>,<span class="number">4</span></div><div class="line"><span class="variable">$a</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span>  <span class="comment"># fails: returns $null</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="literal">$null</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="literal">$null</span>,<span class="number">5</span></div><div class="line"><span class="variable">$a</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span>  <span class="comment"># fails: returns array of 2x $null</span></div><div class="line">(<span class="variable">$a</span> <span class="nomarkup">-eq</span> <span class="literal">$null</span>).Count</div></pre></td></tr></table></figure>
<p>如果您将变量放在左侧，PowerShell 将检测数组内部的 <code>$null</code> 值，并且返回这些值。如果没有 <code>$null</code> 值，则返回 <code>$null</code>。</p>
<p>如果您将变量放在右侧，PowerShell 将检查变量是否为 <code>$null</code>。</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># by reversing the operands, all is FINE:</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="literal">$null</span></div><div class="line"><span class="literal">$null</span> <span class="nomarkup">-eq</span> <span class="variable">$a</span>  <span class="comment"># works: $true</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></div><div class="line"><span class="literal">$null</span> <span class="nomarkup">-eq</span> <span class="variable">$a</span>  <span class="comment"># works: $false</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="literal">$null</span>,<span class="number">3</span>,<span class="number">4</span></div><div class="line"><span class="literal">$null</span> <span class="nomarkup">-eq</span> <span class="variable">$a</span>  <span class="comment"># works: $false</span></div><div class="line">    </div><div class="line"><span class="variable">$a</span> = <span class="number">1</span>,<span class="number">2</span>,<span class="literal">$null</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="literal">$null</span>,<span class="number">5</span></div><div class="line"><span class="literal">$null</span> <span class="nomarkup">-eq</span> <span class="variable">$a</span>  <span class="comment"># works: $false</span></div></pre></td></tr></table></figure>
<p>可以将 <code>$null</code> 放在比较运算符的左侧而不是右侧，来消除这个问题。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/comparing-against-null" target="_blank" rel="external">Comparing Against $NULL</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Comparing Against $NULL
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 检查证书详细信息</title>
    <link href="http://blog.vichamp.com/2017/03/31/examining-certificate-details/"/>
    <id>http://blog.vichamp.com/2017/03/31/examining-certificate-details/</id>
    <published>2017-03-30T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.713Z</updated>
    
    <content type="html"><![CDATA[<p>如果您想检查和查看一个证书文件的详细信息而不需要将它导入证书存储空间，以下是一个简单的例子：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># replace path with actual path to CER file </span></div><div class="line"><span class="variable">$Path</span> = <span class="string">'C:\Path\To\CertificateFile\test.cer'</span></div><div class="line"></div><div class="line"><span class="built_in">Add-Type</span> -AssemblyName System.Security</div><div class="line">[Security.Cryptography.X509Certificates.X509Certificate2]<span class="variable">$cert</span> = [Security.Cryptography.X509Certificates.X509Certificate2]::CreateFromCertFile(<span class="variable">$Path</span>)</div><div class="line"></div><div class="line"><span class="variable">$cert</span> | <span class="built_in">Select-Object</span> -Property *</div></pre></td></tr></table></figure>
<p>您现在可以存取所有详细信息并获取指纹或检查失效日期：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; <span class="variable">$cert</span>.Thumbprint</div><div class="line"><span class="number">7</span>A5A350D95247BB173CDF0867ADA2DBFFCCABDE6</div><div class="line"></div><div class="line">PS C:\&gt; <span class="variable">$cert</span>.NotAfter</div><div class="line"></div><div class="line">Monday June <span class="number">12</span> <span class="number">2017</span> <span class="number">06</span>:<span class="number">00</span>:<span class="number">00</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/examining-certificate-details" target="_blank" rel="external">Examining Certificate Details</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Examining Certificate Details
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 到处 ActiveDirectory 模块</title>
    <link href="http://blog.vichamp.com/2017/03/30/exporting-activedirectory-module/"/>
    <id>http://blog.vichamp.com/2017/03/30/exporting-activedirectory-module/</id>
    <published>2017-03-29T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.706Z</updated>
    
    <content type="html"><![CDATA[<p>要在 PowerShell 中管理 Active Directory 的用户和计算机，您需要 Microsoft 提供的免费的 RSAT 工具中的 Active Directory 模块。</p>
<p>假设您是一个域管理员并且拥有远程管理域控制器的权限，您也可以从 DC 中导出 ActiveDirectory 模块，并且可以通过隐式远程操作在本地使用它。</p>
<p>以下是使用方法：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$DC</span> = <span class="string">'dc1'</span>  <span class="comment"># rename, must be name of one of your domain controllers</span></div><div class="line"></div><div class="line"><span class="comment"># create a session</span></div><div class="line"><span class="variable">$s</span> = <span class="built_in">New-PSSession</span> -ComputerName dc1</div><div class="line"><span class="comment"># export the ActiveDirectory module from the server to a local module "ADStuff"</span></div><div class="line"><span class="built_in">Export-PSSession</span> -Session <span class="variable">$s</span> -OutputModule ADStuff -Module ActiveDirectory -AllowClobber -Force</div><div class="line"></div><div class="line"><span class="comment"># remove session</span></div><div class="line"><span class="built_in">Remove-PSSession</span> <span class="variable">$s</span></div></pre></td></tr></table></figure>
<p>当您运行这段代码时，并且您拥有连接到 DC 的权限时，这段代码创建了一个名为 “ADStuff” 的本地 module，其中包含了所有 AD cmdlet。您可以通过隐式远程处理使用 AD cmdlet而不需要安装 RSAT 工具。</p>
<p>警告：由于所有 cmdlet 实际上都是运行在服务器端，所有结果都被序列化后传到本地。这会改变对象类型，所以当您用将对象通过管道从一个 AD cmdlet 传到另一个 AD cmdlet 时，您可能会遇到绑定问题。只要您在管道之外使用 cmdlet，那么一切都没问题。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/exporting-activedirectory-module" target="_blank" rel="external">Exporting ActiveDirectory Module</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Exporting ActiveDirectory Module
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 管理 NTFS 权限</title>
    <link href="http://blog.vichamp.com/2017/03/29/managing-ntfs-permissions1/"/>
    <id>http://blog.vichamp.com/2017/03/29/managing-ntfs-permissions1/</id>
    <published>2017-03-28T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.701Z</updated>
    
    <content type="html"><![CDATA[<p>由于没有内置的管理 NTFS 权限的 cmdlet，所以有越来越多的开源 PowerShell module 实现这个功能。一个有前途的 module 是由 Raimund Andree，一个德国的 Microsoft 工程师写的。他也将在即将到来的 PowerShell 欧洲会议 (<a href="http://www.psconf.eu" target="_blank" rel="external">www.psconf.eu</a>) 中演讲。</p>
<p>如果您使用的是 PowerShell 5 或已经安装了 PowerShellGet (<a href="http://www.powershellgallery.com" target="_blank" rel="external">www.powershellgallery.com</a>)，以下是从 PowerShell Gallery 下载并安装 “NTFSSecurity” module 的方法：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># review module details</span></div><div class="line">Find-Module -Repository PSGallery -Name NTFSSecurity | <span class="built_in">Select-Object</span> -Property * | <span class="built_in">Out-GridView</span></div><div class="line"></div><div class="line"><span class="comment"># download module</span></div><div class="line">Install-Module -Repository PSGallery -Name NTFSSecurity -Scope CurrentUser</div></pre></td></tr></table></figure>
<p>要查看所有的新 cmdlet，请试试这段代码：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; <span class="built_in">Get-Command</span> -Module NTFSSecurity</div><div class="line"></div><div class="line">CommandType     Name                                               Version</div><div class="line"></div><div class="line">-----------     ----                                               -------    </div><div class="line">Cmdlet          Add-NTFSAccess                                     <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Add-NTFSAudit                                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Clear-NTFSAccess                                   <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Clear-NTFSAudit                                    <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          <span class="built_in">Copy-Item</span>2                                         <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Disable-NTFSAccessInheritance                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Disable-NTFSAuditInheritance                       <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Disable-Privileges                                 <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Enable-NTFSAccessInheritance                       <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Enable-NTFSAuditInheritance                        <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Enable-Privileges                                  <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          <span class="built_in">Get-ChildItem</span>2                                     <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-DiskSpace                                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-FileHash2                                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          <span class="built_in">Get-Item</span>2                                          <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSAccess                                     <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSAudit                                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSEffectiveAccess                            <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSHardLink                                   <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSInheritance                                <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSOrphanedAccess                             <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSOrphanedAudit                              <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSOwner                                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSSecurityDescriptor                         <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-NTFSSimpleAccess                               <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Get-Privileges                                     <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          <span class="built_in">Move-Item</span>2                                         <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          New-NTFSHardLink                                   <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          New-NTFSSymbolicLink                               <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          <span class="built_in">Remove-Item</span>2                                       <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Remove-NTFSAccess                                  <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Remove-NTFSAudit                                   <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Set-NTFSInheritance                                <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Set-NTFSOwner                                      <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          Set-NTFSSecurityDescriptor                         <span class="number">4.2</span>.<span class="number">3</span></div><div class="line">Cmdlet          <span class="built_in">Test-Path</span>2                                         <span class="number">4.2</span>.<span class="number">3</span></div></pre></td></tr></table></figure>
<p>当您获取到这些 cmdlet，那么增加或设置 NTFS 权限就轻而易举：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$path</span> = <span class="string">'c:\test1'</span></div><div class="line"></div><div class="line">mkdir <span class="variable">$path</span></div><div class="line"></div><div class="line">Get-NTFSAccess -Path <span class="variable">$Path</span> | </div><div class="line">    Add-NTFSAccess -Account training14\student14 -AccessRights CreateFiles -AccessType Allow</div></pre></td></tr></table></figure>
<p>警告：您需要管理员权限才能更改 NTFS 权限，即使是操作您拥有的文件系统对象。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/managing-ntfs-permissions1" target="_blank" rel="external">Managing NTFS Permissions</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Managing NTFS Permissions
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 使用通配符确定数组是否包含值</title>
    <link href="http://blog.vichamp.com/2017/03/28/determine-if-array-contains-value-using-wildcards/"/>
    <id>http://blog.vichamp.com/2017/03/28/determine-if-array-contains-value-using-wildcards/</id>
    <published>2017-03-27T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.696Z</updated>
    
    <content type="html"><![CDATA[<p>当您想了解一个数组是否包含某个指定的元素，PowerShell 提供了 <code>-contains</code> 操作符。然而这个操作符不支持通配符，所以您只能使用精确匹配。</p>
<p>以下是一个帮助您使用通配符过滤数组元素的解决方法：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$a</span> = <span class="string">'Hanover'</span>, <span class="string">'Hamburg'</span>, <span class="string">'Vienna'</span>, <span class="string">'Zurich'</span></div><div class="line"></div><div class="line"><span class="comment"># is the exact phrase present in array?</span></div><div class="line"><span class="variable">$a</span> <span class="nomarkup">-contains</span> <span class="string">'Hannover'</span></div><div class="line"><span class="comment"># is ANY phrase present in array that matches the wildcard expression?</span></div><div class="line">(@(<span class="variable">$a</span>) <span class="nomarkup">-like</span> <span class="string">'Ha*'</span>).Count <span class="nomarkup">-gt</span> <span class="number">0</span></div><div class="line"></div><div class="line"><span class="comment"># list all phrases from array that match the wildcard expressions</span></div><div class="line">@(<span class="variable">$a</span>) <span class="nomarkup">-like</span> <span class="string">'Ha*'</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/determine-if-array-contains-value-using-wildcards" target="_blank" rel="external">Determine if Array Contains Value – Using Wildcards</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Determine if Array Contains Value – Using Wildcards
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 处理 LDAP 和日期</title>
    <link href="http://blog.vichamp.com/2017/03/27/working-with-ldap-and-dates/"/>
    <id>http://blog.vichamp.com/2017/03/27/working-with-ldap-and-dates/</id>
    <published>2017-03-26T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.691Z</updated>
    
    <content type="html"><![CDATA[<p>LDAP 过滤器是一个快速和强大的从 Active Directory 中获取信息的方法。然而，LDAP 过滤器使用的是一个很底层的日期和时间格式。它基本上是一个很大的整形数。幸运的是 PowerShell 包含多种将实际 DateTime 对象转换为这些数字，以及相反操作的方法。</p>
<p>以下是一个使用 ActiveDirectory 模块中 <code>Get-ADUser</code> 方法来查找所有近期更改了密码的用户的示例代码。如果您没有这个 module，请从 Microsoft 下载免费的 RSAT 工具。</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># find all AD Users who changed their password in the last 5 days</span></div><div class="line"><span class="variable">$date</span> = (<span class="built_in">Get-Date</span>).AddDays(-<span class="number">5</span>)</div><div class="line"><span class="variable">$ticks</span> = <span class="variable">$date</span>.ToFileTime()</div><div class="line"></div><div class="line"></div><div class="line"><span class="variable">$ldap</span> = <span class="string">"(&amp;(objectCategory=person)(objectClass=user)(pwdLastSet&gt;=<span class="variable">$ticks</span>))"</span></div><div class="line">Get-ADUser -LDAPFilter <span class="variable">$ldap</span> -Properties * |</div><div class="line">  <span class="built_in">Select-Object</span> -Property Name, PasswordLastSet</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/working-with-ldap-and-dates" target="_blank" rel="external">Working with LDAP and Dates</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Working with LDAP and Dates
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 使用 PowerShell 参数验证器</title>
    <link href="http://blog.vichamp.com/2017/03/24/using-a-powershell-parameter-validator/"/>
    <id>http://blog.vichamp.com/2017/03/24/using-a-powershell-parameter-validator/</id>
    <published>2017-03-23T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.688Z</updated>
    
    <content type="html"><![CDATA[<p>PowerShell 的函数参数支持 <code>ValidateScript</code> 属性，可以关联到一段 PowerShell 代码。当该参数接收到一个值时，该代码将会被调用，并且返回 <code>$true</code> 或 <code>$false</code>。如果该代码返回 <code>$false</code> 则该参数被拒绝。</p>
<p>以下是一个仅接受 Windows 文件夹中存在的文件的文件名的例子：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Get-File</div><div class="line">&#123;</div><div class="line">    <span class="keyword">param</span></div><div class="line">    (</div><div class="line">        [Parameter(Mandatory)]</div><div class="line">        [ValidateScript(&#123; <span class="built_in">Test-Path</span> -Path <span class="string">"<span class="variable">$env:windir</span>\<span class="variable">$_</span>"</span> &#125;)]</div><div class="line">        [string]</div><div class="line">        <span class="variable">$File</span></div><div class="line">    )</div><div class="line"></div><div class="line">    <span class="string">"<span class="variable">$File</span> exists in your Windows folder."</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以下是使用效果：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">PS C:\&gt; Get-File  -File explorer.exe</div><div class="line">explorer.exe exists  <span class="keyword">in</span> your Windows folder.</div><div class="line"></div><div class="line">PS C:\&gt; Get-File  -File something.exe</div><div class="line">Get-File : Cannot validate argument on parameter  <span class="string">'File'</span>. The <span class="string">" Test-Path -Path "</span><span class="variable">$env:windir</span>\<span class="variable">$_</span><span class="string">" "</span> validation  script <span class="keyword">for</span> the argument with value <span class="string">"something.exe"</span> did not <span class="keyword">return</span> a  result of True. Determine why the validation script failed, and then <span class="keyword">try</span> the  command again.</div><div class="line">At line:<span class="number">1</span> char:<span class="number">16</span></div><div class="line">+ Get-File -File something.exe</div><div class="line">+                 ~~~~~~~~~~~~~</div><div class="line">    +  CategoryInfo          : InvalidData: (:)  [Get-File], ParameterBindingValidationException</div><div class="line">    +  FullyQualifiedErrorId : ParameterArgumentValidationError,Get-File</div><div class="line"></div><div class="line">PS C:\&gt; Get-File  -File memory.dmp</div><div class="line">memory.dmp exists <span class="keyword">in</span>  your Windows folder.</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/using-a-powershell-parameter-validator" target="_blank" rel="external">Using a PowerShell Parameter Validator</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Using a PowerShell Parameter Validator
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell 技能连载 - 按区域转换数据</title>
    <link href="http://blog.vichamp.com/2017/03/23/casting-data-with-culture/"/>
    <id>http://blog.vichamp.com/2017/03/23/casting-data-with-culture/</id>
    <published>2017-03-22T16:00:00.000Z</published>
    <updated>2017-04-20T06:23:29.686Z</updated>
    
    <content type="html"><![CDATA[<p>当转换数据（将它转换为不同的数据类型）时，PowerShell 支持两种不同的方式方式。</p>
<p>以下是一个例子：</p>
<figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[DateTime]<span class="string">'12.1.2017'</span></div><div class="line"><span class="string">'12.1.2017'</span> -as [DateTime]</div></pre></td></tr></table></figure>
<p>两行代码都将一个字符串转为一个 DateTime 对象。第一行代码代表强制转换。它可能成功也有可能失败，并且它总是使用语言中性的格式（US 格式），所以它应为一个 月-日-年 格式。</p>
<p>第二行代表“尝试转换”：该转换要么成功要么静默地返回 <code>$null</code>。该转换遵循当前的区域设置，所以如果您在一个德文系统众运行这段代码，这段文字被解释成 日-月-年 格式。</p>
<a id="more"></a>
<p>本文国际来源：<a href="http://community.idera.com/powershell/powertips/b/tips/posts/casting-data-with-culture" target="_blank" rel="external">Casting Data with Culture</a></p>]]></content>
    
    <summary type="html">
    
      PowerTip of the Day - Casting Data with Culture
    
    </summary>
    
      <category term="powershell" scheme="http://blog.vichamp.com/categories/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/categories/powershell/tip/"/>
    
    
      <category term="powershell" scheme="http://blog.vichamp.com/tags/powershell/"/>
    
      <category term="tip" scheme="http://blog.vichamp.com/tags/tip/"/>
    
      <category term="powertip" scheme="http://blog.vichamp.com/tags/powertip/"/>
    
      <category term="series" scheme="http://blog.vichamp.com/tags/series/"/>
    
      <category term="translation" scheme="http://blog.vichamp.com/tags/translation/"/>
    
  </entry>
  
</feed>
